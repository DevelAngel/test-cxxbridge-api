#include "test-cxxbridge-api/src/cxx/mod.rs.h" // generated by cxx.rs
#include "rust/cxx.h"

#include <stdexcept>
#include <exception>
#include <string>

namespace rust::behavior {

  using namespace std::string_literals;

  auto retrieve_error_string(ErrorType err, std::string msg = ""s) -> std::string {
    auto err_str = static_cast<std::string>(error_to_string(err));
    if (msg.empty()) {
      return "["s + err_str + "]"s;
    } else {
      return "["s + err_str + "] "s + msg;
    }
  }

  auto retrieve_error(std::runtime_error e) noexcept -> std::string {
      return retrieve_error_string(ErrorType::Runtime, e.what());
  }

  auto retrieve_error(std::exception e) noexcept -> std::string {
      return retrieve_error_string(ErrorType::Standard, e.what());
  }

  auto retrieve_unknown_error(void) noexcept -> std::string {
      return retrieve_error_string(ErrorType::Unknown);
  }

}
